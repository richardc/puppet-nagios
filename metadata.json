{
  "author": "puppetlabs",
  "version": "0.0.1",
  "types": [
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "command_line"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type command.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_command.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_command",
      "parameters": [
        {
          "doc": "The name of this nagios_command resource.",
          "name": "command_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contactgroups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_notifications_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_notifications_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_notification_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_notification_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_notification_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_notification_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_notification_commands"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_notification_commands"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "email"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "pager"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address1"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address2"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address3"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address4"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address5"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address6"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "can_submit_commands"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_status_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_nonstatus_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type contact.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_contact.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_contact",
      "parameters": [
        {
          "doc": "The name of this nagios_contact resource.",
          "name": "contact_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contactgroup_members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type contactgroup.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_contactgroup.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_contactgroup",
      "parameters": [
        {
          "doc": "The name of this nagios_contactgroup resource.",
          "name": "contactgroup_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "display_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "address"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "parents"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_command"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "initial_state"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "max_check_attempts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retry_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "active_checks_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "passive_checks_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "obsess_over_host"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_freshness"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "freshness_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "event_handler"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "event_handler_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "low_flap_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "high_flap_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "flap_detection_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "flap_detection_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "failure_prediction_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "process_perf_data"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_status_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_nonstatus_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contacts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contact_groups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "first_notification_delay"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notifications_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "stalking_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "action_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image_alt"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "vrml_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "statusmap_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type host.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_host.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_host",
      "parameters": [
        {
          "doc": "The name of this nagios_host resource.",
          "name": "host_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependent_host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependent_hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "inherits_parent"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "execution_failure_criteria"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_failure_criteria"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependency_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type hostdependency.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_hostdependency.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_hostdependency",
      "parameters": [
        {
          "doc": "The name of this nagios_hostdependency resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contacts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contact_groups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "first_notification"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "last_notification"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "escalation_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "escalation_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type hostescalation.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_hostescalation.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_hostescalation",
      "parameters": [
        {
          "doc": "The name of this nagios_hostescalation resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image_alt"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "vrml_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "statusmap_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type hostextinfo.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_hostextinfo.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_hostextinfo",
      "parameters": [
        {
          "doc": "The name of this nagios_hostextinfo resource.",
          "name": "host_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "action_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type hostgroup.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_hostgroup.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_hostgroup",
      "parameters": [
        {
          "doc": "The name of this nagios_hostgroup resource.",
          "name": "hostgroup_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_description"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "display_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "servicegroups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "is_volatile"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_command"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "initial_state"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "max_check_attempts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retry_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "normal_check_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retry_check_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "active_checks_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "passive_checks_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "parallelize_check"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "obsess_over_service"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "check_freshness"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "freshness_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "event_handler"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "event_handler_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "low_flap_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "high_flap_threshold"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "flap_detection_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "flap_detection_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "process_perf_data"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "failure_prediction_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_status_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "retain_nonstatus_information"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "first_notification_delay"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notifications_enabled"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contacts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contact_groups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "stalking_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "action_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image_alt"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type service.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_service.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_service",
      "parameters": [
        {
          "doc": "The name of this nagios_service resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependent_host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependent_hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependent_service_description"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_description"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "inherits_parent"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "execution_failure_criteria"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_failure_criteria"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "dependency_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type servicedependency.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_servicedependency.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_servicedependency",
      "parameters": [
        {
          "doc": "The name of this nagios_servicedependency resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "hostgroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "servicegroup_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_description"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contacts"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "contact_groups"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "first_notification"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "last_notification"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notification_interval"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "escalation_period"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "escalation_options"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type serviceescalation.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_serviceescalation.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_serviceescalation",
      "parameters": [
        {
          "doc": "The name of this nagios_serviceescalation resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "host_name"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "service_description"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "action_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "icon_image_alt"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type serviceextinfo.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_serviceextinfo.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_serviceextinfo",
      "parameters": [
        {
          "doc": "The name of this nagios_serviceextinfo resource.",
          "name": "_naginator_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "servicegroup_members"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "notes_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "action_url"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type servicegroup.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_servicegroup.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_servicegroup",
      "parameters": [
        {
          "doc": "The name of this nagios_servicegroup resource.",
          "name": "servicegroup_name"
        }
      ]
    },
    {
      "properties": [
        {
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
          "name": "ensure"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "use"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "alias"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "sunday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "monday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "tuesday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "wednesday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "thursday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "friday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "saturday"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "exclude"
        },
        {
          "doc": "Nagios configuration file parameter.",
          "name": "register"
        },
        {
          "doc": "The target.",
          "name": "target"
        }
      ],
      "doc": "The Nagios type timeperiod.  This resource type is autogenerated using the\n      model developed in Naginator, and all of the Nagios types are generated using the\n      same code and the same library.\n\n      This type generates Nagios configuration statements in Nagios-parseable configuration\n      files.  By default, the statements will be added to `/etc/nagios/nagios_timeperiod.cfg`, but\n      you can send them to a different file by setting their `target` attribute.\n\n      You can purge Nagios resources using the `resources` type, but *only*\n      in the default file locations.  This is an architectural limitation.\n\n    ",
      "providers": [
        {
          "doc": "",
          "name": "naginator"
        }
      ],
      "name": "nagios_timeperiod",
      "parameters": [
        {
          "doc": "The name of this nagios_timeperiod resource.",
          "name": "timeperiod_name"
        }
      ]
    }
  ],
  "project_page": "http://forge.puppetlabs.com/puppetlabs/nagios",
  "checksums": {
    "spec/puppet_spec/fixtures.rb": "147446d18612c8395ac65be10b1cd9ab",
    "spec/monkey_patches/publicize_methods.rb": "1b03a4af94f7dac35f7c2809caf372ca",
    "lib/puppet/type/nagios_command.rb": "267cbd4859822dc725c1d64fdbd48357",
    "lib/puppet/type/nagios_hostextinfo.rb": "b2602c0f84ac931fc42a027ae7cbd7fa",
    "lib/puppet/type/nagios_serviceescalation.rb": "54080f3e26583f59e838c1ece0e205df",
    "lib/puppet/external/nagios.rb": "ac8c8e190d20b7293b3948f31d36b44e",
    "spec/unit/provider/naginator_spec.rb": "b9fcbae7ca4194ba8d44b6831a345834",
    "spec/spec_helper.rb": "5ddfa068aaf6e85afdea6d8401b890fb",
    "Rakefile": "3a529e5458bade4f62ca83ab3c54d018",
    "lib/puppet/type/nagios_servicegroup.rb": "6d95fbe970ef5e9dfc2f7641dbbf0caa",
    "lib/puppet/type/nagios_contactgroup.rb": "23858d45549e3b15205ac49b3362a9ba",
    "lib/puppet/external/nagios/parser.rb": "3d6400cabcc7b57ac7cee4c14c2f26a3",
    "lib/puppet/type/nagios_service.rb": "7f6ff23a4c30b15b08a6d5b90ceeafa8",
    "lib/puppet/external/nagios/makefile": "f897e4a11e8e1d672cd2fa7fd233076a",
    "lib/puppet/external/nagios/base.rb": "241ee6662f5a77b499500934888c0be9",
    "spec/unit/util/nagios_maker_spec.rb": "00eb40f85dcd3759ecaa6d592c6b487c",
    "lib/puppet/type/nagios_host.rb": "d3e6589deb97c83be87c6f086360d2cb",
    "spec/puppet_spec/files.rb": "34e40f4dcdc90d1138a471d883c33d79",
    "README": "18f4a61eeac6297ab88931b03f710599",
    "lib/puppet/type/nagios_hostgroup.rb": "8d7a0e52d633ae32aefcea3d08e0063c",
    "lib/puppet/type/nagios_hostdependency.rb": "a9b7e03e30b97ce0eb2c8dd78fa4ef8e",
    "lib/puppet/type/nagios_contact.rb": "2d7d4f5e42135734723a51fd40922d89",
    "lib/puppet/type/nagios_serviceextinfo.rb": "149f1844ac7b14b0da7e10bb2e74e7be",
    "lib/puppet/external/nagios/grammar.ry": "c9806d84a19564b514f32f890d01cc35",
    "spec/unit/type/nagios_spec.rb": "e44d1bbe3fec9971a6d33b01f37623a1",
    "spec/puppet_spec/matchers.rb": "8e77dc7317de7fc2ff289fb716623b6c",
    "Modulefile": "2a78e63fa07180a988c4abdacace5684",
    "lib/puppet/type/nagios_timeperiod.rb": "164711498359203409e2dbb704830db5",
    "lib/puppet/type/nagios_servicedependency.rb": "ed430621d8a5daa51801cbc11b486687",
    "spec/puppet_spec/verbose.rb": "2e0e0e74f2c5ec0408d455e773755bf9",
    "lib/puppet/util/nagios_maker.rb": "3d5e4e0074660e9e8179099132a332ae",
    "lib/puppet/type/nagios_hostescalation.rb": "0f38778492c1ec496473acc5ec6bfed3",
    "spec/monkey_patches/alias_should_to_must.rb": "7cd4065c63f06f1ab3aaa1c5f92af947",
    "lib/puppet/provider/naginator.rb": "0decc3f1f71a85672c5335765655c47c"
  },
  "source": "git@github.com:puppetlabs/puppetlabs-nagios.git",
  "license": "Apache License, Version 2.0",
  "name": "puppetlabs-nagios",
  "dependencies": [

  ],
  "description": "Manages nagios, formerly part of the puppet core",
  "summary": "nagios types, formerly part of the puppet core"
}